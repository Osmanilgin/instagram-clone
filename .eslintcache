[{"C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\index.js":"1","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\reportWebVitals.js":"2","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\App.js":"3","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\Post.js":"4","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\firebase.js":"5","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\ImageUpload.js":"6"},{"size":500,"mtime":1607969791779,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":6213,"mtime":1608150150486,"results":"10","hashOfConfig":"8"},{"size":831,"mtime":1608158123260,"results":"11","hashOfConfig":"8"},{"size":547,"mtime":1609498079842,"results":"12","hashOfConfig":"8"},{"size":3586,"mtime":1609497923450,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3v38yp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"16"},"C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\index.js",[],["32","33"],"C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\reportWebVitals.js",[],"C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\App.js",["34","35","36","37"],"import { Button, Input, makeStyles, Modal } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { auth, db, storage } from './firebase';\nimport ImageUpload from './ImageUpload';\nimport Post from './Post';\nimport './App.css';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport \"./ImageUpload.css\"\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50 ;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    width: 'fit-content',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: 50,\n    paddingLeft: 70,\n    paddingRight:70,\n    textAlign:'center'\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const[modalStyle] = useState(getModalStyle);\n\n   const[openSignIn,setOpenSignIn]= useState('')\n   const [posts,SetPosts]= useState([])\n   const[open,SetOpen]= useState(false)\n   const[username,setUsername]= useState('')\n   const[password,setPassword]= useState('')\n   const[email,setEmail]= useState('')\n   const[info,setInfo]= useState([])\n   const[user,setUser]=useState(null)\n\n   useEffect(() => {\n      const unsubscribe=auth.onAuthStateChanged((authUser) => {\n        if (authUser){\n          //user has logged in...\n          setUser(authUser)\n           \n        } else {\n          //user has logged out...\n          setUser(null);\n        }\n      })\n      return () => {\n        //perform some cleanup actions\n        unsubscribe();\n      }\n   }, [user, username]);\n\nuseEffect(() => {\n    \n    db.collection('posts').orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot=>\n      {SetPosts(snapshot.docs.map(doc =>({id: doc.id, post: doc.data()}) ))})\n  },[])\n\n  const signUp = (e) =>{\n    e.preventDefault();\n        auth.createUserWithEmailAndPassword(email,password)\n        .then((authUser)=> {\n          return authUser.user.updateProfile({\n            displayName: username\n          })\n        })\n        .catch((error)=>setInfo(error.message))\n         \n        if  (user) {\n          setInfo('') \n          SetOpen(false)\n      }          \n          \n\n  }\n\n  const signIn =(e)=>{\n    e.preventDefault()\n    auth.signInWithEmailAndPassword(email,password)\n    .catch((error)=> setInfo(error.message))\n           \n       if  (auth.error) {\n        setOpenSignIn(true)\n       } \n       if (user) {\n      setInfo('') \n      setOpenSignIn(false)\n  }    }\n       \n  \n\n  return (\n    <div className=\"App\">\n           {user?.displayName ? (\n            <ImageUpload username={user.displayName} />\n           ) : (  <div className=\"uploadheader\"> \n           <PublishIcon className=\"uploadIcon\" > </PublishIcon>\n            </div>)}\n           \n\n      <Modal \n        open={open}\n        onClose={() => SetOpen(false)}\n        \n      >\n        <div style={modalStyle} className={classes.paper}> \n           <form className=\"app__signup\"> \n           <center>\n           <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"/>\n           </center>\n             <div style={{color:'red'}}> {info}   </div>\n           <Input \n                type=\"text\"\n                placeholder=\"username\"\n                value={username}\n                onChange={(e)=> setUsername(e.target.value)}\n              />\n               <Input \n                type=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e)=> setEmail(e.target.value)}\n              />\n               <Input \n                type=\"password\"\n                placeholder='password'\n                value={password}\n                onChange={(e)=> setPassword(e.target.value)}\n              />\n\n              <Button type=\"submit\" style={{backgroundColor: '#f2f2f2', marginTop:20}}\n               variant=\"outlined\" onClick={signUp} >Sign Up</Button>\n          \n           </form>\n        </div>\n      </Modal>\n\n      <Modal \n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n        \n      >\n        <div style={modalStyle} className={classes.paper}> \n           <form className=\"app__signup\"> \n           <center>\n           <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"/>\n           </center>\n             <div style={{color:'red'}}> {info}   </div>\n           \n               <Input \n                type=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e)=> setEmail(e.target.value)}\n              />\n               <Input \n                type=\"password\"\n                placeholder='password'\n                value={password}\n                onChange={(e)=> setPassword(e.target.value)}\n              />\n\n              <Button type=\"submit\" style={{backgroundColor: '#f2f2f2', marginTop:20}}\n               variant=\"outlined\" onClick={signIn} >Sign In</Button>\n          \n           </form>\n        </div>\n      </Modal>\n      \n      \n      <div className=\"app__header\">\n        <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"/>\n              \n\n            {user ? ( \n              <Button className=\"app__buttonOut\" onClick={() => auth.signOut()}\n              variant=\"contained\" color=\"secondary\">LogOut</Button>\n            ): (\n              <div className=\"app__loginContainer\"> \n               <Button className=\"app__buttonIn\" onClick={() => setOpenSignIn(true)}\n               variant=\"contained\" color=\"secondary\">Sign In</Button> \n               <Button className=\"app__buttonUp\" onClick={() => SetOpen(true)}\n               variant=\"contained\" color=\"secondary\">Sign Up</Button>\n              </div>\n               \n            )}  \n              \n\n      </div>\n           {\n           posts.map(({id, post})=>(\n             <Post key={id} username={post.username} caption={post.caption} imageUrl={post.imageUrl}/>\n           ))\n           }\n\n   \n     \n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\Post.js",["38","39","40"],"import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport \"./Post.css\"\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { db } from './firebase';\r\n\r\nfunction Post({username, caption, imageUrl}) {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\"> \r\n            \r\n            <Avatar\r\n              className=\"post__avatar\"\r\n              alt={username}\r\n              src=\"static/images/avatar/1.jp\"/>\r\n               <h3>{username}</h3>\r\n               \r\n               \r\n              </div>\r\n              \r\n            <img className=\"post__image\" src={imageUrl} />\r\n           \r\n          \r\n                <h4 className=\"post__text\">  <strong> {username}</strong> {caption}</h4>\r\n        \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Post\r\n","C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\firebase.js",["41"],"import firebase from \"firebase\"\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDXgXASJ8At1SuLUJmBGA4P0pby9xFTdLE\",\r\n  authDomain: \"instagram-clone-41335.firebaseapp.com\",\r\n  projectId: \"instagram-clone-41335\",\r\n  storageBucket: \"instagram-clone-41335.appspot.com\",\r\n  messagingSenderId: \"270219496609\",\r\n  appId: \"1:270219496609:web:40fb735f42033f659674e0\",\r\n  measurementId: \"G-5RZRZ6Q7P6\"\r\n})\r\n\r\nconst db = firebase.firestore();\r\nconst auth= firebase.auth();\r\nconst storage= firebase.storage();\r\n \r\nexport {db, auth, storage};",["42","43"],"C:\\Users\\LENOVOcomp\\Desktop\\react dosyaları\\instagram-clone\\src\\ImageUpload.js",["44"],"import { Button, makeStyles, Modal } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport {db, storage} from \"./firebase\"\r\nimport firebase from \"firebase\"\r\nimport \"./ImageUpload.css\"\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50 ;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      width: 'fit-content',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: 50,\r\n      paddingLeft: 70,\r\n      paddingRight:70,\r\n      textAlign:'center'\r\n    },\r\n  }));\r\n \r\n\r\nfunction ImageUpload({username}) {\r\n    const classes = useStyles();\r\n  const[modalStyle] = useState(getModalStyle);\r\n  const[open,SetOpen]= useState(false)\r\n\r\n    const [caption, setCaption]= useState('');\r\n    const [progress,setProgress]=useState(0)\r\n    const [image, setImage]= useState(null)\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]){\r\n            setImage(e.target.files[0])\r\n        }\r\n    }\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        \r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                // progress function...\r\n                const progress = Math.round(\r\n                     (snapshot.bytesTransferred / snapshot.totalBytes) *100);\r\n                setProgress(progress);         \r\n            },\r\n            (error) => {\r\n                //error function... \r\n                    alert(error.message)\r\n            },\r\n            () => {\r\n                // complete function... \r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then (url => {\r\n                    \r\n                    db.collection(\"posts\").add({\r\n                        caption: caption,\r\n                        imageUrl:url,\r\n                        username: username,  \r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n                    })\r\n                        setProgress(0);\r\n                        setImage(null)\r\n                        setCaption(\"\")\r\n                \r\n                })\r\n            }\r\n        )\r\n    }\r\n   \r\n\r\n    return (\r\n        <div  >\r\n              <Modal \r\n        open={open}\r\n        onClose={() => SetOpen(false)}\r\n        \r\n      >    \r\n        <div className=\"modal\" style={modalStyle} className={classes.paper}> \r\n        <center>\r\n        \r\n            <input className=\"modal\" type=\"text\" placeholder=\"Enter a caption...\"\r\n            onChange={e => setCaption(e.target.value)} value={caption} />\r\n            <input className=\"modal\" type=\"file\" onChange={handleChange} />\r\n            <progress value={progress} max=\"100\" />\r\n            <Button variant=\"contained\" className=\"modal1\" onClick={handleUpload}> Upload </Button>  \r\n            </center>\r\n        </div>\r\n      </Modal>\r\n       \r\n        <div className=\"uploadheader\"> \r\n        <PublishIcon className=\"uploadIcon\" onClick={() =>  SetOpen(true)}> Upload </PublishIcon>\r\n         </div>\r\n             \r\n           \r\n            \r\n      \r\n          \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":20,"nodeType":"51","messageId":"52","endLine":3,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":122,"column":12,"nodeType":"55","endLine":122,"endColumn":139},{"ruleId":"53","severity":1,"message":"54","line":159,"column":12,"nodeType":"55","endLine":159,"endColumn":139},{"ruleId":"53","severity":1,"message":"54","line":185,"column":9,"nodeType":"55","endLine":185,"endColumn":107},{"ruleId":"49","severity":1,"message":"56","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":25},{"ruleId":"49","severity":1,"message":"57","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":21,"column":13,"nodeType":"55","endLine":21,"endColumn":59},{"ruleId":"49","severity":1,"message":"58","line":3,"column":7,"nodeType":"51","messageId":"52","endLine":3,"endColumn":18},{"ruleId":"45","replacedBy":"59"},{"ruleId":"47","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":96,"column":51,"nodeType":"63","endLine":96,"endColumn":76},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DeleteOutlineIcon' is defined but never used.","'db' is defined but never used.","'firebaseApp' is assigned a value but never used.",["64"],["65"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]